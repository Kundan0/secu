import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
FPS=25
depth=[2.5815422534942627, 2.651683807373047, 2.6481335163116455, 2.726611614227295, 2.7940618991851807, 2.5857908725738525, 2.707275867462158, 2.6707069873809814, 2.5966665744781494, 2.6816210746765137, 2.591325044631958, 2.682180881500244, 2.53825306892395, 2.348693609237671, 2.7139782905578613, 2.649087429046631, 2.832368850708008, 2.8351259231567383, 2.756453514099121, 2.829033136367798, 2.7769935131073, 2.652317523956299, 2.7090680599212646, 2.769469738006592, 2.8726069927215576, 2.9354007244110107, 3.0338454246520996, 2.8127551078796387, 2.9507761001586914, 2.9356846809387207, 2.9662463665008545, 2.9584741592407227, 2.6666195392608643, 2.7187447547912598, 2.7005810737609863, 2.6771621704101562, 2.696370840072632, 2.712980270385742, 2.7036924362182617, 2.612264394760132, 2.5622596740722656, 2.665167808532715, 2.6416847705841064, 2.639181613922119, 2.5921201705932617, 2.6980109214782715, 2.5867297649383545, 2.6781725883483887, 2.7082138061523438, 2.4639177322387695, 2.5613901615142822, 2.6353063583374023, 2.851005792617798, 2.7067184448242188, 2.7549641132354736, 2.8044886589050293, 2.7403554916381836, 2.676189661026001, 2.5414249897003174, 2.525005578994751, 2.5198919773101807, 2.514904499053955, 2.4984679222106934, 2.5469958782196045, 2.6863784790039062, 2.821223497390747, 2.7956817150115967, 2.6789543628692627, 2.6404600143432617, 2.7078983783721924, 2.7695698738098145, 2.716622829437256, 2.647895574569702, 2.7594475746154785, 2.644843339920044, 2.6772267818450928, 2.8617005348205566, 2.7039997577667236, 2.7652554512023926, 2.4301159381866455, 2.374868154525757, 2.3999531269073486, 2.536442756652832, 2.5075020790100098, 2.348081350326538, 2.564002752304077, 2.457592248916626, 2.4289259910583496, 2.4933950901031494, 2.245089530944824, 2.1520297527313232, 2.335686206817627, 2.273622751235962, 2.629220962524414, 2.651613235473633, 2.6277999877929688, 2.780341148376465, 2.681663990020752, 2.6798017024993896, 2.6675007343292236, 2.6798582077026367, 2.5712056159973145, 2.777101993560791, 2.6212735176086426, 2.7171988487243652, 2.5971527099609375, 2.816409111022949, 2.6806933879852295, 2.5616891384124756, 2.7901253700256348, 2.900766134262085, 2.822861909866333, 2.851572275161743, 2.8170127868652344, 2.6942672729492188, 2.725609302520752, 2.691931962966919, 2.5801138877868652, 2.6473710536956787, 2.4727461338043213, 2.6148102283477783, 2.5573573112487793, 2.613440990447998, 2.592491865158081, 2.6548871994018555, 2.6146464347839355, 2.59956693649292, 2.534799814224243, 2.4281764030456543, 2.5549557209014893, 2.384084701538086, 2.6270527839660645, 2.6413497924804688, 2.5519180297851562, 2.309014320373535, 2.2870850563049316, 2.6293373107910156, 2.50049090385437, 2.4134433269500732, 2.4180827140808105, 2.491058349609375, 2.5440754890441895, 2.559283494949341, 2.5757548809051514, 2.73993182182312, 2.5520870685577393, 2.484708786010742, 2.567150831222534, 2.5808844566345215, 2.508220672607422, 2.688072919845581, 2.6521401405334473, 2.7294416427612305, 2.782923936843872, 2.7280590534210205, 2.5829238891601562, 2.582953929901123, 2.5117087364196777, 2.2302486896514893, 2.23211932182312, 2.522449016571045, 2.5457890033721924, 2.419799566268921, 2.249204158782959, 2.203207492828369, 2.1972153186798096, 2.270055055618286, 2.288769245147705, 2.2913966178894043, 2.230875015258789, 2.2057735919952393, 2.1496999263763428, 2.386827230453491, 2.2432308197021484, 2.080690383911133, 2.1072304248809814, 2.1465566158294678, 2.360053777694702, 2.2730510234832764, 2.2662863731384277, 2.500988721847534, 2.4746227264404297, 2.236708879470825, 2.2844817638397217, 2.3125267028808594, 2.2755959033966064, 2.274785041809082, 2.3124172687530518, 2.2862625122070312, 2.3614399433135986]

depths=[depth[38*i:38*(i+1)] for i in range(int(len(depth)/38))]
x=np.arange(38).reshape(-1,1)
print("\n\n STARTING THE PROGRAM \n\n\n")
for i in range(len(depths)):
    i=1
    depth_bucket=np.array(depths[i])
    print(depth_bucket)
    lr=LinearRegression()
    model=lr.fit(x,depth_bucket)
    depth_end=list(model.predict(np.array([0,37]).reshape(-1,1)))
    depth_line=list(model.predict(np.array([i for i in range(38)]).reshape(-1,1)))
    
    print(depth_end)
    delta_depth=(depth_end[1]-depth_end[0])
    avg_depth=(depth_end[1]+depth_end[0])/2
    vel_x=delta_depth*FPS/2
    print(vel_x)
    fig = plt.figure()
    ax1 = fig.add_subplot(111)
    ax1.scatter(x.reshape(-1,1),depth_bucket,c='b')
    ax1.scatter(x.reshape(-1,1),depth_line,c='r')
    plt.show()
    print("\n\n\n\n")
    break

#vel_y=((tracks[i][0][0]-tracks[i][37][0])+(tracks[i][0][2]-tracks[i][37][2]))*FPS/2560
#each_item["velocity"].append((vel_x,vel_y))